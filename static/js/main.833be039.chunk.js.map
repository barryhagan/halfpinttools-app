{"version":3,"sources":["dropzone/baseline-cloud_upload-24px.svg","upload/baseline-check_circle_outline-24px.svg","dropzone/Dropzone.js","progress/Progress.js","upload/Upload.js","App.js","index.js"],"names":["module","exports","Dropzone","props","state","hightlight","fileInputRef","React","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","this","disabled","current","click","evt","files","target","array","fileListToArray","event","preventDefault","disabed","setState","dataTransfer","list","i","length","push","item","className","onClick","style","cursor","ref","type","multiple","onChange","alt","src","uploadIcon","Component","Progress","width","progress","Upload","uploading","uploadProgress","successfullUploaded","pdfUrl","uploadFiles","renderActions","prevState","concat","xhr","XMLHttpRequest","open","file","pop","formData","FormData","append","name","send","onload","copy","status","percentage","JSON","parse","response","onprogress","lengthComputable","loaded","total","onerror","opacity","href","process","map","key","renderProgress","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.833be039.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseline-cloud_upload-24px.3f7e59cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/baseline-check_circle_outline-24px.e0d99bb4.svg\";","import React, { Component } from \"react\";\r\nimport \"./Dropzone.css\";\r\nimport uploadIcon from \"./baseline-cloud_upload-24px.svg\";\r\n\r\nclass Dropzone extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hightlight: false };\r\n    this.fileInputRef = React.createRef();\r\n\r\n    this.openFileDialog = this.openFileDialog.bind(this);\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.onDragOver = this.onDragOver.bind(this);\r\n    this.onDragLeave = this.onDragLeave.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  openFileDialog() {\r\n    if (this.props.disabled) return;\r\n    this.fileInputRef.current.click();\r\n  }\r\n\r\n  onFilesAdded(evt) {\r\n    if (this.props.disabled) return;\r\n    const files = evt.target.files;\r\n    if (this.props.onFilesAdded) {\r\n      const array = this.fileListToArray(files);\r\n      this.props.onFilesAdded(array);\r\n    }\r\n  }\r\n\r\n  onDragOver(event) {\r\n    event.preventDefault();\r\n    if (this.props.disabed) return;\r\n    this.setState({ hightlight: true });\r\n  }\r\n\r\n  onDragLeave(event) {\r\n    this.setState({ hightlight: false });\r\n  }\r\n\r\n  onDrop(event) {\r\n    event.preventDefault();\r\n    if (this.props.disabed) return;\r\n    const files = event.dataTransfer.files;\r\n    if (this.props.onFilesAdded) {\r\n      const array = this.fileListToArray(files);\r\n      this.props.onFilesAdded(array);\r\n    }\r\n    this.setState({ hightlight: false });\r\n  }\r\n\r\n  fileListToArray(list) {\r\n    const array = [];\r\n    for (var i = 0; i < list.length; i++) {\r\n      array.push(list.item(i));\r\n    }\r\n    return array;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\r\n        onDragOver={this.onDragOver}\r\n        onDragLeave={this.onDragLeave}\r\n        onDrop={this.onDrop}\r\n        onClick={this.openFileDialog}\r\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\r\n      >\r\n        <input\r\n          ref={this.fileInputRef}\r\n          className=\"FileInput\"\r\n          type=\"file\"\r\n          multiple\r\n          onChange={this.onFilesAdded}\r\n        />\r\n        <img alt=\"upload\" className=\"Icon\" src={uploadIcon} />\r\n        <span>Upload Excel .xlsx</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropzone;\r\n","import React, { Component } from \"react\";\r\nimport \"./Progress.css\";\r\n\r\nclass Progress extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ProgressBar\">\r\n        <div\r\n          className=\"Progress\"\r\n          style={{ width: this.props.progress + \"%\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Progress;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"../dropzone/Dropzone\";\r\nimport \"./Upload.css\";\r\nimport Progress from \"../progress/Progress\";\r\nimport uploadIcon from \"./baseline-check_circle_outline-24px.svg\";\r\n\r\nclass Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: [],\r\n      uploading: false,\r\n      uploadProgress: {},\r\n      successfullUploaded: false,\r\n      pdfUrl: null\r\n    };\r\n\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.renderActions = this.renderActions.bind(this);\r\n  }\r\n\r\n  onFilesAdded(files) {\r\n    this.setState(prevState => ({\r\n      files: prevState.files.concat(files)\r\n    }));\r\n  }\r\n\r\n  uploadFiles() {\r\n    this.setState({ uploadProgress: {}, uploading: true });\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\r\n      \"POST\",\r\n      \"https://ac6gag1rsl.execute-api.us-east-2.amazonaws.com/Prod/api/consignor/createlabels\"\r\n    );\r\n\r\n    const file = this.state.files.pop();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file, file.name);\r\n    xhr.send(formData);\r\n\r\n    xhr.onload = () => {\r\n      const copy = { ...this.state.uploadProgress };\r\n      if (xhr.status === 200) {\r\n        copy[file.name] = { state: \"done\", percentage: 100 };\r\n        this.setState({\r\n          successfullUploaded: true,\r\n          uploading: false,\r\n          pdfUrl: JSON.parse(xhr.response).pdfUrl\r\n        });\r\n      } else {\r\n        copy[file.name] = { state: \"error\", percentage: 0 };\r\n      }\r\n      this.setState({ uploadProgress: copy });\r\n    };\r\n\r\n    xhr.onprogress = event => {\r\n      if (event.lengthComputable) {\r\n        const copy = { ...this.state.uploadProgress };\r\n        copy[file.name] = {\r\n          state: \"pending\",\r\n          percentage: (event.loaded / event.total) * 100\r\n        };\r\n        this.setState({ uploadProgress: copy });\r\n      }\r\n    };\r\n\r\n    xhr.onerror = () => {\r\n      const copy = { ...this.state.uploadProgress };\r\n      copy[file.name] = { state: \"error\", percentage: 0 };\r\n      this.setState({ uploadProgress: copy });\r\n    };\r\n  }\r\n\r\n  renderProgress(file) {\r\n    const uploadProgress = this.state.uploadProgress[file.name];\r\n    if (this.state.uploading || this.state.successfullUploaded || true) {\r\n      return (\r\n        <div className=\"ProgressWrapper\">\r\n          <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\r\n          <img\r\n            className=\"CheckIcon\"\r\n            alt=\"done\"\r\n            src={uploadIcon}\r\n            style={{\r\n              opacity:\r\n                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderActions() {\r\n    if (this.state.successfullUploaded && this.state.pdfUrl) {\r\n      return (\r\n        <a href={this.state.pdfUrl}>\r\n          <button>Download PDF</button>\r\n        </a>\r\n      );\r\n    }\r\n    return (\r\n      <button\r\n        disabled={this.state.files.length < 1 || this.state.uploading}\r\n        onClick={this.uploadFiles}\r\n      >\r\n        {this.state.uploading ? \"Creating...\" : \"Create PDF\"}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Upload\">\r\n        <h2>Half Pint Consignor Label Maker</h2>\r\n        <div className=\"Title\">STEP 1</div>\r\n        <div>\r\n          Create your inventory spreadsheet. You can download an example to get\r\n          started{\" \"}\r\n          <a\r\n            href={process.env.PUBLIC_URL + \"/Consignor_Inventory_TEMPLATE.xlsx\"}\r\n          >\r\n            here\r\n          </a>\r\n          .\r\n        </div>\r\n        <div className=\"Title\">STEP 2</div>\r\n        <div>\r\n          Upload your completed inventory spreadsheet and create your PDF.\r\n        </div>\r\n\r\n        {!this.state.pdfUrl && (\r\n          <div className=\"Content\">\r\n            <div>\r\n              <Dropzone\r\n                onFilesAdded={this.onFilesAdded}\r\n                disabled={\r\n                  this.state.files.length > 0 ||\r\n                  this.state.uploading ||\r\n                  this.state.successfullUploaded\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"Files\">\r\n              {this.state.files.map(file => {\r\n                return (\r\n                  <div key={file.name} className=\"Row\">\r\n                    <span className=\"Filename\">{file.name}</span>\r\n                    {this.renderProgress(file)}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"Actions\">{this.renderActions()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Upload from \"./upload/Upload\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Card\">\n          <Upload />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}